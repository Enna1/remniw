// Emit LLVM IR
// RUN: %remniw -emit-llvm %s -o %t1
// RUN: echo 10 | lli %t1 | FileCheck %s --check-prefix=CHECK-P
// RUN: echo -10 | lli %t1 | FileCheck %s --check-prefix=CHECK-N
// RUN: echo 0 | lli %t1 | FileCheck %s --check-prefix=CHECK-Z

// Emit X86 assembly
// RUN: %remniw-llc %t1 -o %t2.s ; clang %t2.s -o %t3
// RUN: echo 10 | %t3 | FileCheck %s --check-prefix=CHECK-P
// RUN: echo -10 | %t3 | FileCheck %s --check-prefix=CHECK-N
// RUN: echo 0 | %t3 | FileCheck %s --check-prefix=CHECK-Z
// RUN: %remniw %s -o %t4 ; echo 10 | %t4 | FileCheck %s --check-prefix=CHECK-P
// RUN: %remniw %s -o %t4 ; echo -10 | %t4 | FileCheck %s --check-prefix=CHECK-N
// RUN: %remniw %s -o %t4 ; echo 0 | %t4 | FileCheck %s --check-prefix=CHECK-Z

// Emit RISCV assembly
// RUN: %remniw-llc --target=riscv %t1 -o %t2.riscv.s ; \
// RUN:     %riscv-cc %t2.riscv.s -o %t3.riscv.exe
// RUN: echo 10 | qemu-riscv64 %t3.riscv.exe | FileCheck %s --check-prefix=CHECK-P
// RUN: echo -10 | qemu-riscv64 %t3.riscv.exe | FileCheck %s --check-prefix=CHECK-N
// RUN: echo 0 | qemu-riscv64 %t3.riscv.exe | FileCheck %s --check-prefix=CHECK-Z

func main() int {
    var n int;
    var f int;
    n = %input;
    f = 1;
    if (n > 0) {
        f = f*n;
        n = n-1;
    }
    %output f;
    %output n;
    return 0;
}

// CHECK-P: 10
// CHECK-P-NEXT: 9
// CHECK-N: 1
// CHECK-N-NEXT: -10
// CHECK-Z: 1
// CHECK-Z-NEXT: 0
