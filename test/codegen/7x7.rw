// Emit LLVM IR
// RUN: %remniw -emit-llvm %s -o %t1 ; lli %t1 | FileCheck %s

// Emit X86 assembly
// RUN: %remniw-llc %t1 -o %t2.s ; clang %t2.s -o %t3; %t3 | FileCheck %s
// RUN: %remniw %s -o %t4 ; %t4 | FileCheck %s

// Emit RISCV assembly
// RUN: %remniw-llc --target=riscv %t1 -o %t2.riscv.s ; %riscv-cc %t2.riscv.s -o %t3.riscv.exe; qemu-riscv64 %t3.riscv.exe | FileCheck %s

func main() int {
  var  v00, v01, v02, v03, v04, v05, v06, v07, v10, v11, v12, v13, v14, v15, v16, v17, v20, v21, v22, v23, v24, v25, v26, v27, v30, v31, v32, v33, v34, v35, v36, v37, v40, v41, v42, v43, v44, v45, v46, v47, v50, v51, v52, v53, v54, v55, v56, v57, v60, v61, v62, v63, v64, v65, v66, v67, v70, v71, v72, v73, v74, v75, v76, v77 int;
  v00 = 1;
  v01 = 1;
  v02 = 1;
  v03 = 1;
  v04 = 1;
  v05 = 1;
  v06 = 1;
  v07 = 1;
  v10 = 1;
  v11 = 1;
  v12 = 1;
  v13 = 1;
  v14 = 1;
  v15 = 1;
  v16 = 1;
  v17 = 1;
  v20 = 1;
  v21 = 1;
  v22 = 1;
  v23 = 1;
  v24 = 1;
  v25 = 1;
  v26 = 1;
  v27 = 1;
  v30 = 1;
  v31 = 1;
  v32 = 1;
  v33 = 1;
  v34 = 1;
  v35 = 1;
  v36 = 1;
  v37 = 1;
  v40 = 1;
  v41 = 1;
  v42 = 1;
  v43 = 1;
  v44 = 1;
  v45 = 1;
  v46 = 1;
  v47 = 1;
  v50 = 1;
  v51 = 1;
  v52 = 1;
  v53 = 1;
  v54 = 1;
  v55 = 1;
  v56 = 1;
  v57 = 1;
  v60 = 1;
  v61 = 1;
  v62 = 1;
  v63 = 1;
  v64 = 1;
  v65 = 1;
  v66 = 1;
  v67 = 1;
  v70 = 1;
  v71 = 1;
  v72 = 1;
  v73 = 1;
  v74 = 1;
  v75 = 1;
  v76 = 1;
  v77 = 1;
  v00 = 1 - (1 - v00*v00) * (1 - v01*v10) * (1 - v02*v20) * (1 - v03*v30) * (1 - v04*v40) * (1 - v05*v50) * (1 - v06*v60) * (1 - v07*v70);
  v01 = 1 - (1 - v00*v01) * (1 - v01*v11) * (1 - v02*v21) * (1 - v03*v31) * (1 - v04*v41) * (1 - v05*v51) * (1 - v06*v61) * (1 - v07*v71);
  v02 = 1 - (1 - v00*v02) * (1 - v01*v12) * (1 - v02*v22) * (1 - v03*v32) * (1 - v04*v42) * (1 - v05*v52) * (1 - v06*v62) * (1 - v07*v72);
  v03 = 1 - (1 - v00*v03) * (1 - v01*v13) * (1 - v02*v23) * (1 - v03*v33) * (1 - v04*v43) * (1 - v05*v53) * (1 - v06*v63) * (1 - v07*v73);
  v04 = 1 - (1 - v00*v04) * (1 - v01*v14) * (1 - v02*v24) * (1 - v03*v34) * (1 - v04*v44) * (1 - v05*v54) * (1 - v06*v64) * (1 - v07*v74);
  v05 = 1 - (1 - v00*v05) * (1 - v01*v15) * (1 - v02*v25) * (1 - v03*v35) * (1 - v04*v45) * (1 - v05*v55) * (1 - v06*v65) * (1 - v07*v75);
  v06 = 1 - (1 - v00*v06) * (1 - v01*v16) * (1 - v02*v26) * (1 - v03*v36) * (1 - v04*v46) * (1 - v05*v56) * (1 - v06*v66) * (1 - v07*v76);
  v07 = 1 - (1 - v00*v07) * (1 - v01*v17) * (1 - v02*v27) * (1 - v03*v37) * (1 - v04*v47) * (1 - v05*v57) * (1 - v06*v67) * (1 - v07*v77);
  v10 = 1 - (1 - v10*v00) * (1 - v11*v10) * (1 - v12*v20) * (1 - v13*v30) * (1 - v14*v40) * (1 - v15*v50) * (1 - v16*v60) * (1 - v17*v70);
  v11 = 1 - (1 - v10*v01) * (1 - v11*v11) * (1 - v12*v21) * (1 - v13*v31) * (1 - v14*v41) * (1 - v15*v51) * (1 - v16*v61) * (1 - v17*v71);
  v12 = 1 - (1 - v10*v02) * (1 - v11*v12) * (1 - v12*v22) * (1 - v13*v32) * (1 - v14*v42) * (1 - v15*v52) * (1 - v16*v62) * (1 - v17*v72);
  v13 = 1 - (1 - v10*v03) * (1 - v11*v13) * (1 - v12*v23) * (1 - v13*v33) * (1 - v14*v43) * (1 - v15*v53) * (1 - v16*v63) * (1 - v17*v73);
  v14 = 1 - (1 - v10*v04) * (1 - v11*v14) * (1 - v12*v24) * (1 - v13*v34) * (1 - v14*v44) * (1 - v15*v54) * (1 - v16*v64) * (1 - v17*v74);
  v15 = 1 - (1 - v10*v05) * (1 - v11*v15) * (1 - v12*v25) * (1 - v13*v35) * (1 - v14*v45) * (1 - v15*v55) * (1 - v16*v65) * (1 - v17*v75);
  v16 = 1 - (1 - v10*v06) * (1 - v11*v16) * (1 - v12*v26) * (1 - v13*v36) * (1 - v14*v46) * (1 - v15*v56) * (1 - v16*v66) * (1 - v17*v76);
  v17 = 1 - (1 - v10*v07) * (1 - v11*v17) * (1 - v12*v27) * (1 - v13*v37) * (1 - v14*v47) * (1 - v15*v57) * (1 - v16*v67) * (1 - v17*v77);
  v20 = 1 - (1 - v20*v00) * (1 - v21*v10) * (1 - v22*v20) * (1 - v23*v30) * (1 - v24*v40) * (1 - v25*v50) * (1 - v26*v60) * (1 - v27*v70);
  v21 = 1 - (1 - v20*v01) * (1 - v21*v11) * (1 - v22*v21) * (1 - v23*v31) * (1 - v24*v41) * (1 - v25*v51) * (1 - v26*v61) * (1 - v27*v71);
  v22 = 1 - (1 - v20*v02) * (1 - v21*v12) * (1 - v22*v22) * (1 - v23*v32) * (1 - v24*v42) * (1 - v25*v52) * (1 - v26*v62) * (1 - v27*v72);
  v23 = 1 - (1 - v20*v03) * (1 - v21*v13) * (1 - v22*v23) * (1 - v23*v33) * (1 - v24*v43) * (1 - v25*v53) * (1 - v26*v63) * (1 - v27*v73);
  v24 = 1 - (1 - v20*v04) * (1 - v21*v14) * (1 - v22*v24) * (1 - v23*v34) * (1 - v24*v44) * (1 - v25*v54) * (1 - v26*v64) * (1 - v27*v74);
  v25 = 1 - (1 - v20*v05) * (1 - v21*v15) * (1 - v22*v25) * (1 - v23*v35) * (1 - v24*v45) * (1 - v25*v55) * (1 - v26*v65) * (1 - v27*v75);
  v26 = 1 - (1 - v20*v06) * (1 - v21*v16) * (1 - v22*v26) * (1 - v23*v36) * (1 - v24*v46) * (1 - v25*v56) * (1 - v26*v66) * (1 - v27*v76);
  v27 = 1 - (1 - v20*v07) * (1 - v21*v17) * (1 - v22*v27) * (1 - v23*v37) * (1 - v24*v47) * (1 - v25*v57) * (1 - v26*v67) * (1 - v27*v77);
  v30 = 1 - (1 - v30*v00) * (1 - v31*v10) * (1 - v32*v20) * (1 - v33*v30) * (1 - v34*v40) * (1 - v35*v50) * (1 - v36*v60) * (1 - v37*v70);
  v31 = 1 - (1 - v30*v01) * (1 - v31*v11) * (1 - v32*v21) * (1 - v33*v31) * (1 - v34*v41) * (1 - v35*v51) * (1 - v36*v61) * (1 - v37*v71);
  v32 = 1 - (1 - v30*v02) * (1 - v31*v12) * (1 - v32*v22) * (1 - v33*v32) * (1 - v34*v42) * (1 - v35*v52) * (1 - v36*v62) * (1 - v37*v72);
  v33 = 1 - (1 - v30*v03) * (1 - v31*v13) * (1 - v32*v23) * (1 - v33*v33) * (1 - v34*v43) * (1 - v35*v53) * (1 - v36*v63) * (1 - v37*v73);
  v34 = 1 - (1 - v30*v04) * (1 - v31*v14) * (1 - v32*v24) * (1 - v33*v34) * (1 - v34*v44) * (1 - v35*v54) * (1 - v36*v64) * (1 - v37*v74);
  v35 = 1 - (1 - v30*v05) * (1 - v31*v15) * (1 - v32*v25) * (1 - v33*v35) * (1 - v34*v45) * (1 - v35*v55) * (1 - v36*v65) * (1 - v37*v75);
  v36 = 1 - (1 - v30*v06) * (1 - v31*v16) * (1 - v32*v26) * (1 - v33*v36) * (1 - v34*v46) * (1 - v35*v56) * (1 - v36*v66) * (1 - v37*v76);
  v37 = 1 - (1 - v30*v07) * (1 - v31*v17) * (1 - v32*v27) * (1 - v33*v37) * (1 - v34*v47) * (1 - v35*v57) * (1 - v36*v67) * (1 - v37*v77);
  v40 = 1 - (1 - v40*v00) * (1 - v41*v10) * (1 - v42*v20) * (1 - v43*v30) * (1 - v44*v40) * (1 - v45*v50) * (1 - v46*v60) * (1 - v47*v70);
  v41 = 1 - (1 - v40*v01) * (1 - v41*v11) * (1 - v42*v21) * (1 - v43*v31) * (1 - v44*v41) * (1 - v45*v51) * (1 - v46*v61) * (1 - v47*v71);
  v42 = 1 - (1 - v40*v02) * (1 - v41*v12) * (1 - v42*v22) * (1 - v43*v32) * (1 - v44*v42) * (1 - v45*v52) * (1 - v46*v62) * (1 - v47*v72);
  v43 = 1 - (1 - v40*v03) * (1 - v41*v13) * (1 - v42*v23) * (1 - v43*v33) * (1 - v44*v43) * (1 - v45*v53) * (1 - v46*v63) * (1 - v47*v73);
  v44 = 1 - (1 - v40*v04) * (1 - v41*v14) * (1 - v42*v24) * (1 - v43*v34) * (1 - v44*v44) * (1 - v45*v54) * (1 - v46*v64) * (1 - v47*v74);
  v45 = 1 - (1 - v40*v05) * (1 - v41*v15) * (1 - v42*v25) * (1 - v43*v35) * (1 - v44*v45) * (1 - v45*v55) * (1 - v46*v65) * (1 - v47*v75);
  v46 = 1 - (1 - v40*v06) * (1 - v41*v16) * (1 - v42*v26) * (1 - v43*v36) * (1 - v44*v46) * (1 - v45*v56) * (1 - v46*v66) * (1 - v47*v76);
  v47 = 1 - (1 - v40*v07) * (1 - v41*v17) * (1 - v42*v27) * (1 - v43*v37) * (1 - v44*v47) * (1 - v45*v57) * (1 - v46*v67) * (1 - v47*v77);
  v50 = 1 - (1 - v50*v00) * (1 - v51*v10) * (1 - v52*v20) * (1 - v53*v30) * (1 - v54*v40) * (1 - v55*v50) * (1 - v56*v60) * (1 - v57*v70);
  v51 = 1 - (1 - v50*v01) * (1 - v51*v11) * (1 - v52*v21) * (1 - v53*v31) * (1 - v54*v41) * (1 - v55*v51) * (1 - v56*v61) * (1 - v57*v71);
  v52 = 1 - (1 - v50*v02) * (1 - v51*v12) * (1 - v52*v22) * (1 - v53*v32) * (1 - v54*v42) * (1 - v55*v52) * (1 - v56*v62) * (1 - v57*v72);
  v53 = 1 - (1 - v50*v03) * (1 - v51*v13) * (1 - v52*v23) * (1 - v53*v33) * (1 - v54*v43) * (1 - v55*v53) * (1 - v56*v63) * (1 - v57*v73);
  v54 = 1 - (1 - v50*v04) * (1 - v51*v14) * (1 - v52*v24) * (1 - v53*v34) * (1 - v54*v44) * (1 - v55*v54) * (1 - v56*v64) * (1 - v57*v74);
  v55 = 1 - (1 - v50*v05) * (1 - v51*v15) * (1 - v52*v25) * (1 - v53*v35) * (1 - v54*v45) * (1 - v55*v55) * (1 - v56*v65) * (1 - v57*v75);
  v56 = 1 - (1 - v50*v06) * (1 - v51*v16) * (1 - v52*v26) * (1 - v53*v36) * (1 - v54*v46) * (1 - v55*v56) * (1 - v56*v66) * (1 - v57*v76);
  v57 = 1 - (1 - v50*v07) * (1 - v51*v17) * (1 - v52*v27) * (1 - v53*v37) * (1 - v54*v47) * (1 - v55*v57) * (1 - v56*v67) * (1 - v57*v77);
  v60 = 1 - (1 - v60*v00) * (1 - v61*v10) * (1 - v62*v20) * (1 - v63*v30) * (1 - v64*v40) * (1 - v65*v50) * (1 - v66*v60) * (1 - v67*v70);
  v61 = 1 - (1 - v60*v01) * (1 - v61*v11) * (1 - v62*v21) * (1 - v63*v31) * (1 - v64*v41) * (1 - v65*v51) * (1 - v66*v61) * (1 - v67*v71);
  v62 = 1 - (1 - v60*v02) * (1 - v61*v12) * (1 - v62*v22) * (1 - v63*v32) * (1 - v64*v42) * (1 - v65*v52) * (1 - v66*v62) * (1 - v67*v72);
  v63 = 1 - (1 - v60*v03) * (1 - v61*v13) * (1 - v62*v23) * (1 - v63*v33) * (1 - v64*v43) * (1 - v65*v53) * (1 - v66*v63) * (1 - v67*v73);
  v64 = 1 - (1 - v60*v04) * (1 - v61*v14) * (1 - v62*v24) * (1 - v63*v34) * (1 - v64*v44) * (1 - v65*v54) * (1 - v66*v64) * (1 - v67*v74);
  v65 = 1 - (1 - v60*v05) * (1 - v61*v15) * (1 - v62*v25) * (1 - v63*v35) * (1 - v64*v45) * (1 - v65*v55) * (1 - v66*v65) * (1 - v67*v75);
  v66 = 1 - (1 - v60*v06) * (1 - v61*v16) * (1 - v62*v26) * (1 - v63*v36) * (1 - v64*v46) * (1 - v65*v56) * (1 - v66*v66) * (1 - v67*v76);
  v67 = 1 - (1 - v60*v07) * (1 - v61*v17) * (1 - v62*v27) * (1 - v63*v37) * (1 - v64*v47) * (1 - v65*v57) * (1 - v66*v67) * (1 - v67*v77);
  v70 = 1 - (1 - v70*v00) * (1 - v71*v10) * (1 - v72*v20) * (1 - v73*v30) * (1 - v74*v40) * (1 - v75*v50) * (1 - v76*v60) * (1 - v77*v70);
  v71 = 1 - (1 - v70*v01) * (1 - v71*v11) * (1 - v72*v21) * (1 - v73*v31) * (1 - v74*v41) * (1 - v75*v51) * (1 - v76*v61) * (1 - v77*v71);
  v72 = 1 - (1 - v70*v02) * (1 - v71*v12) * (1 - v72*v22) * (1 - v73*v32) * (1 - v74*v42) * (1 - v75*v52) * (1 - v76*v62) * (1 - v77*v72);
  v73 = 1 - (1 - v70*v03) * (1 - v71*v13) * (1 - v72*v23) * (1 - v73*v33) * (1 - v74*v43) * (1 - v75*v53) * (1 - v76*v63) * (1 - v77*v73);
  v74 = 1 - (1 - v70*v04) * (1 - v71*v14) * (1 - v72*v24) * (1 - v73*v34) * (1 - v74*v44) * (1 - v75*v54) * (1 - v76*v64) * (1 - v77*v74);
  v75 = 1 - (1 - v70*v05) * (1 - v71*v15) * (1 - v72*v25) * (1 - v73*v35) * (1 - v74*v45) * (1 - v75*v55) * (1 - v76*v65) * (1 - v77*v75);
  v76 = 1 - (1 - v70*v06) * (1 - v71*v16) * (1 - v72*v26) * (1 - v73*v36) * (1 - v74*v46) * (1 - v75*v56) * (1 - v76*v66) * (1 - v77*v76);
  v77 = 1 - (1 - v70*v07) * (1 - v71*v17) * (1 - v72*v27) * (1 - v73*v37) * (1 - v74*v47) * (1 - v75*v57) * (1 - v76*v67) * (1 - v77*v77);
  %output v77;
  return 0;
}

// CHECK: 1
