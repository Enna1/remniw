// Emit LLVM IR
// RUN: %remniw -emit-llvm %s -o %t1 ; lli %t1 | FileCheck %s

// Emit X86 assembly
// RUN: %remniw-llc %t1 -o %t2.s ; clang %t2.s -o %t3; %t3 | FileCheck %s
// RUN: %remniw %s -o %t4 ; %t4 | FileCheck %s

// Emit RISCV assembly
// RUN: %remniw-llc --target=riscv %t1 -o %t2.riscv.s ; \
// RUN:     %riscv-cc %t2.riscv.s -o %t3.riscv.exe; \
// RUN:     qemu-riscv64 %t3.riscv.exe | FileCheck %s

func g(a *int) int {
    *a = 17;
    return 11;
}

func succ(i int) int{
    return i+1;
}

func h(pf func(int) int, i int) int {
    return (pf)(i);
}

func f(a int) int {
    var b,c,d int;
    b = 3;
    return a+b;
}

func test(i int) int {
    while (i > 0){
        %output i;
        i = i - 1;
    }
    return 0;
}

func main() int {
    var a int;
    a = 17;
    if (a > 17) {
        a = 13;
    } else {
        a = 19;
    }
    %output h(succ,17);
    return 0;
}

// CHECK: 18
